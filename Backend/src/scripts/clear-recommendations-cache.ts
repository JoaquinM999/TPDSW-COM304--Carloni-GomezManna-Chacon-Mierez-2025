import Redis from 'ioredis';

async function clearRecommendationsCache() {
  const redisUrl = process.env.REDIS_URL;
  
  if (!redisUrl) {
    console.log('‚ö†Ô∏è  Redis no est√° configurado (modo mock). No hay cach√© que limpiar.');
    return;
  }
  
  const redis = new Redis(redisUrl);
  
  try {
    console.log('üßπ LIMPIANDO CACH√â DE RECOMENDACIONES\n');
    console.log('='.repeat(60));
    
    // Buscar todas las keys de recomendaciones
    const keys = await redis.keys('recomendaciones:*');
    
    console.log(`\nüìä Encontradas ${keys.length} keys de recomendaciones en cach√©`);
    
    if (keys.length === 0) {
      console.log('‚úÖ No hay cach√© que limpiar');
      return;
    }
    
    console.log('\nüóëÔ∏è  Eliminando cach√©...\n');
    
    // Eliminar todas las keys
    for (const key of keys) {
      await redis.del(key);
      console.log(`   ‚úÖ Eliminada: ${key}`);
    }
    
    console.log('\n' + '='.repeat(60));
    console.log(`‚úÖ ${keys.length} keys eliminadas correctamente`);
    console.log('‚ú® Los usuarios ver√°n las nuevas im√°genes en su pr√≥xima visita');
    
  } catch (error) {
    console.error('‚ùå Error al limpiar cach√©:', error);
  } finally {
    await redis.quit();
  }
}

clearRecommendationsCache();
